

The ``5-text_indentation`` doctest
==========================
Imports ``text_indentation`` function from ``5-text_indentation``
and tests for any edge cases that may break the functionality
of the imported function

>>> text_indentation = __import__('5-text_indentation').text_indentation

>>> text = "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quonam modo? Utrum igitur tibi litteram videor an totas paginas commovere? Non autem hoc: igitur ne illud quidem. Fortasse id optimum, sed ubi illud: Plus semper voluptatis? Teneo, inquit, finem illi videri nihil dolere. Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens. Si id dicis, vicimus. Inde sermone vario sex illa a Dipylo stadia confecimus. Sin aliud quid voles, postea. Quae animi affectio suum cuique tribuens atque hanc, quam dico. Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres"
>>> text_indentation(text)
Lorem ipsum dolor sit amet, consectetur adipiscing elit.
<BLANKLINE>
Quonam modo?
<BLANKLINE>
Utrum igitur tibi litteram videor an totas paginas commovere?
<BLANKLINE>
Non autem hoc:
<BLANKLINE>
igitur ne illud quidem.
<BLANKLINE>
Fortasse id optimum, sed ubi illud:
<BLANKLINE>
Plus semper voluptatis?
<BLANKLINE>
Teneo, inquit, finem illi videri nihil dolere.
<BLANKLINE>
Transfer idem ad modestiam vel temperantiam, quae est moderatio cupiditatum rationi oboediens.
<BLANKLINE>
Si id dicis, vicimus.
<BLANKLINE>
Inde sermone vario sex illa a Dipylo stadia confecimus.
<BLANKLINE>
Sin aliud quid voles, postea.
<BLANKLINE>
Quae animi affectio suum cuique tribuens atque hanc, quam dico.
<BLANKLINE>
Utinam quidem dicerent alium alio beatiorem! Iam ruinas videres

>>> text1 = 420
>>> text_indentation(text1)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> my_list = [1, 2, 3, 4]
>>> text_indentation(my_list)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation()
Traceback (most recent call last):
...
TypeError: text_indentation() missing 1 required positional argument: 'text'

>>> text_indentation("")

>>> text_indentation("?")
?
<BLANKLINE>

>>> text_indentation(".")
.
<BLANKLINE>

>>> text_indentation(":")
:
<BLANKLINE>


>>> text_indentation(None)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation(" You shall not pass!")
You shall not pass!

>>> text_indentation("You shall not pass either! ")
You shall not pass either!

>>> text_indentation(" WHAT ")
WHAT

>>> text_indentation(3.14)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation((1, 2, 3, 4))
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation({"Hello": 5, "World": 5})
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation(-25)
Traceback (most recent call last):
...
TypeError: text must be a string

text_indentation(-2.5)
Traceback (most recent call last):
...
TypeError: text must be a string

>>> text_indentation("           ")